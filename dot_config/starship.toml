format = "${custom.distro}$all"

[status]
disabled = false
map_symbol = true
format = "[$symbol $common_meaning$signal_name$maybe_int]($style) "

[cmd_duration]
show_notifications = true

[git_state]
cherry_pick = "🍒 PICKING"

[directory]
truncation_symbol = ".../"
truncate_to_repo = false
truncation_length = 5
home_symbol = "🏠"
fish_style_pwd_dir_length = 1

# [directory.substitutions]
# "^/etc" = "⚙️"

[custom.giturl]
# disabled = true
description = "Display symbol for remote Git server"
command = """
GIT_REMOTE_SYMBOL=" "
GIT_REMOTE=$(command git ls-remote --get-url 2> /dev/null)
if [[ "$GIT_REMOTE" =~ "github" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "bitbucket" ]]; then
    GIT_REMOTE_SYMBOL=" "
fi
GIT_REMOTE_URL=
if [[ -z "$GIT_REMOTE" ]] ; then
    GIT_REMOTE="localhost"
else
    if [[ "$GIT_REMOTE" == http* ]] ; then
        GIT_REMOTE_URL="$GIT_REMOTE"
    fi
    for PATTERN in "https" "http" "git" "://" "@"; do
        [[ "$GIT_REMOTE" == "$PATTERN"* ]] && GIT_REMOTE="${GIT_REMOTE##"$PATTERN"}"
    done
    for PATTERN in "/" ".git"; do
        [[ "$GIT_REMOTE" == *"$PATTERN" ]] && GIT_REMOTE="${GIT_REMOTE%%"$PATTERN"}"
    done
    if [[ -n "$GIT_REMOTE_URL" ]] ; then
        GIT_REMOTE=$(printf '\\e]8;;%s\\e\\%s\\e]8;;\\e\\' "$GIT_REMOTE_URL" "$GIT_REMOTE")
    fi
fi
printf '%s %s' "$GIT_REMOTE_SYMBOL" "$GIT_REMOTE"
"""
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
format = "at $output "

[custom.ssh_keys]
description = "SSH key count"
when = "ssh-add -l | grep -v -q 'no identities'"
command = "ssh-add -l | grep -v 'no identities' | wc -l"
format = "$symbol[$output]($style) "
symbol = "🔑"
style = "bold fg:green"

[custom.distro]
description = "Display symbol for the current Linux distro"
command = """
source /etc/os-release
case "$ID" in
    fedora)
        printf ""
        ;;
    ubuntu)
        printf ""
        ;;
    opensuse*)
        printf ""
        ;;
    *)
        printf ""
        ;;
esac
"""
when = "test -f /etc/os-release"
style = "bold blue"
